function out = BarrOpt_fitfn(x,BarrIndex,v)
%TradeOffHub -- guides the multiobjective algo to the models we use to
%calculate returns on river services. Several are smiple enough (depend
%only on the dam, not the network, e.g. hydropower) all you need to do is
%sum the values. Others (such as habitat and recreation) require a
%basin-wide assessment of connectivity and so external models are used.

%x = the array of 0/1's generated by NSGA-II to indicate dam remove/keep
%DamIndex = the original (organized by running DamIndexSelector) list of dams and their downstream partner(s, if island dams exist)
%ObjectiveVars=the original list of dam data used for seeking fitness
%varnames = names of the objective variables (fish, power, etc...)

%
%Initialize
%first, round x to nearest lower integer, only necessary if multi decision
%alternatives are getting used
if max(x)>1
    x=floor(x);
end
% if v{1,end}(8)>=4
%     t=1;
% elseif v{1,end}(8)==3 && size(v{strcmp('power',v(1,:))},2)==1
%     x(x==2)=3;
%     t=1;
% elseif v{1,end}(8)==3 && size(v{strcmp('power',v(1,:))},2)==2
%     t=0;
% else
%     t=0;
% end

%potential hydropower development sites: under status quo wouldn't exist,
%so they can only be triggered if x is 2 or 4
%make sure their hydropower is in 2nd column, installation cost is in 2nd
%column
if size(v{strcmp('power',v(1,:))},2)==2
    x(BarrIndex(1:length(x),1)'>=9e8 & ismember(x,[1 3]))=0;
end
% %cost hack
% x(x>0)=3;
out = zeros(size(x,1),length(v));

%NSGA-II has generated a new population of x values, now revise the
%DamIndex to these changes


%revise DamData (aka ObjectiveVars) ased on new x
% ActiveObjectiveVars=ObjectiveVars;
% for i=1:size(ActiveObjectiveVars,2)
%     ActiveObjectiveVars{1,i}(x==0,:)=[];
% end

%One thing is checked and two things are revised here:
%1. Check if the watershed has island dams
%2. Get the new active dam index, the lenth of which differs if the island
%dams exist, and in all cases the index is longer than x by at least one
%because the watershed ID (at the bottom) is excluded from selection in
%NSGA-II as it is a constant feature.
%3. Simple sum functions, set the proper datarange before summing by
%removing the watershed and island dam data at the end
% if size(DamIndex,2)>2
datarange=length(x);
%x(x(DamIndex(1:length(x),1)>9e8)==1)=0; %constructing new dams: if x==1, make x==0 because for status quo, the dam doesn't exist
x = [x ones(1,length(BarrIndex)-length(x))];
ActiveDamIndex=DPPF_idx(x,BarrIndex,1);
% else
%     x = [x 1];
%     ActiveDamIndex=DPPF_idx(x,DamIndex);
%     datarange=size(DamIndex,1)-1;
% end

%
%Infrastructure Failure Risk. 3/13/19 approach: zero replaced culverts/rm'd dams, take 95th percentile over all
if ismember('Infrastructure Failure Risk',v(1,:))
%     v{2,strcmp('Infrastructure Failure Risk',v(1,:))}.OT_RISK(x(1:datarange)==0)=0;
    out(strcmp('Infrastructure Failure Risk', v(1,:))==1)=...
        sum(v{2,strcmp('Infrastructure Failure Risk',v(1,:))}.OT_RISK(x(1:datarange)==1),1);
%         prctile(v{2,strcmp('Infrastructure Failure Risk',v(1,:))}.OT_RISK(1:datarange),95);
end
%
%Diadromous Fish Habitat
if ismember('Diadromous Fish Habitat',v(1,:))
    %Sum fish requires network calc through Barr_netOV. Package metrics.
    nv=table2array(v{2,strcmp('Diadromous Fish Habitat', v(1,:))==1}...
        (x>0,strcmp(fieldnames(v{2,strcmp('Diadromous Fish Habitat', v(1,:))==1}),'RhHabA')...
        | strcmp(fieldnames(v{2,strcmp('Diadromous Fish Habitat', v(1,:))==1}),'BkTHabA')...
        | strcmp(fieldnames(v{2,strcmp('Diadromous Fish Habitat', v(1,:))==1}),'SalmoHabA')...
        | strcmp(fieldnames(v{2,strcmp('Diadromous Fish Habitat', v(1,:))==1}),'ShadHabA')...
        | strcmp(fieldnames(v{2,strcmp('Diadromous Fish Habitat', v(1,:))==1}),'SLamHabA')...
        | strcmp(fieldnames(v{2,strcmp('Diadromous Fish Habitat', v(1,:))==1}),'EelHabA')==1));
%     nv=table2array(v{2,strcmp('Diadromous Fish Habitat', v(1,:))==1}...
%         (x(1:datarange+1)==1,strcmp(fieldnames(v{2,strcmp('Diadromous Fish Habitat', v(1,:))==1}),'RhHabA')...
%         | strcmp(fieldnames(v{2,strcmp('Diadromous Fish Habitat', v(1,:))==1}),'BkTHabA')==1));
 
    pv=table2array(v{2,strcmp('Diadromous Fish Habitat', v(1,:))==1}...
        (x>0,strcmp(fieldnames(v{2,strcmp('Diadromous Fish Habitat', v(1,:))==1}),'RH_P')...
        | strcmp(fieldnames(v{2,strcmp('Diadromous Fish Habitat', v(1,:))==1}),'BKT_P')...
        | strcmp(fieldnames(v{2,strcmp('Diadromous Fish Habitat', v(1,:))==1}),'ASAL_P')...
        | strcmp(fieldnames(v{2,strcmp('Diadromous Fish Habitat', v(1,:))==1}),'ASHA_P')...
        | strcmp(fieldnames(v{2,strcmp('Diadromous Fish Habitat', v(1,:))==1}),'SL_P')...
        | strcmp(fieldnames(v{2,strcmp('Diadromous Fish Habitat', v(1,:))==1}),'AE_P')==1));
%     pv=table2array(v{2,strcmp('Diadromous Fish Habitat', v(1,:))==1}...
%         (x(1:datarange+1)==1,strcmp(fieldnames(v{2,strcmp('Diadromous Fish Habitat', v(1,:))==1}),'RH_P')...
%         | strcmp(fieldnames(v{2,strcmp('Diadromous Fish Habitat', v(1,:))==1}),'BKT_P')==1));

    av=table2array(v{2,strcmp('Diadromous Fish Habitat', v(1,:))==1}...
        (x>0,strcmp(fieldnames(v{2,strcmp('Diadromous Fish Habitat', v(1,:))==1}),'AlRm_5d_sm')==1));
%     av=table2array(v{2,strcmp('Diadromous Fish Habitat', v(1,:))==1}...
%         (x(1:datarange+1)==1,strcmp(fieldnames(v{2,strcmp('Diadromous Fish Habitat', v(1,:))==1}),'AlRm_5d_sm')==1));
    
%     out(strcmp('Diadromous Fish Habitat', v(1,:))==1)=...
%         sum(-1*Barr_netOV(ActiveDamIndex,nv,pv,al));
else
    %flag to prevent Barr_netOV execution.
    nv=nan; pv=nan; av=nan;
end

%
%Dam Utilities
if ismember('Dam Utilities',v(1,:))
    %sum of everything in the DU bin
    %normalized-to-max power and storage metrics are the usual ones.
    out(strcmp('Dam Utilities', v(1,:))==1)=...
        -sum(sum(table2array(v{2,strcmp('Dam Utilities',v(1,:))}(x(1:datarange)==1,:))));
end
%
%Recreational Boating
if ismember('Recreational Boating',v(1,:))
    %Sum FLRU first
    out(strcmp('Recreational Boating', v(1,:))==1)=...
        -sum(v{2,strcmp('Recreational Boating',v(1,:))}.FLRU(datarange+1:end),1)...
        +sum(v{2,strcmp('Recreational Boating',v(1,:))}.FLRU(x(1:datarange)==0),1);
    %Sum FRRU requires network calc through Barr_netOV. Package metrics.
    nv=[nv table2array(v{2,strcmp('Recreational Boating', v(1,:))==1}...
        (x>0,strcmp(fieldnames(v{2,strcmp('Recreational Boating', v(1,:))==1}),'FRRU')))];
%     nv=[nv table2array(v{2,strcmp('Recreational Boating', v(1,:))==1}...
%         (x(1:datarange+1)==1,strcmp(fieldnames(v{2,strcmp('Recreational Boating', v(1,:))==1}),'FRRU')))];
    %I'm just using 300cfs guidelines for now. Can easily add others if
    %necessary, but 300 cfs has good coverage into culverted streams.
    rv=[table2array(v{2,strcmp('Recreational Boating', v(1,:))==1}...
        (x>0,strcmp(fieldnames(v{2,strcmp('Recreational Boating', v(1,:))==1}),'fdr300cfs')==1))... 
        table2array(v{2,strcmp('Recreational Boating', v(1,:))==1}...
        (x>0,strcmp(fieldnames(v{2,strcmp('Recreational Boating', v(1,:))==1}),'fdy300')==1))];
%     rv=[table2array(v{2,strcmp('Recreational Boating', v(1,:))==1}...
%         (x(1:datarange+1)==1,strcmp(fieldnames(v{2,strcmp('Recreational Boating', v(1,:))==1}),'fdr300cfs')==1))... 
%         table2array(v{2,strcmp('Recreational Boating', v(1,:))==1}...
%         (x(1:datarange+1)==1,strcmp(fieldnames(v{2,strcmp('Recreational Boating', v(1,:))==1}),'fdy300')==1))];
else
    rv=nan;
end
%
%Decision Costs
if ismember('Decision Costs',v(1,:))
    %Sum of costs from barriers that changed (x==0 means dams removed, culverts replaced)
    out(strcmp('Decision Costs', v(1,:))==1)=...
        sum(v{2,strcmp('Decision Costs',v(1,:))}.DnCost(x(1:datarange)~=1),1);
end
%
%Barr_netOV network sums fish and river rec metrics.
if ~isnan(nv(1,1))
    scores = Barr_netOV(ActiveDamIndex,nv,pv,av,rv);
    %move scores to respective position in 'out'
    out(strcmp('Diadromous Fish Habitat', v(1,:))==1)=...
        -sum(scores(1:size(pv,2)));
    %rec is always at the end, single column.
    out(strcmp('Recreational Boating', v(1,:))==1)=...
        out(strcmp('Recreational Boating', v(1,:))==1)...
        -sum(scores(end));
end